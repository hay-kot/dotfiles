#!/usr/bin/env bash
set -euo pipefail

if which gum > /dev/null; then
    # Return is no staged files found from git diff
    if [ -z "$(git diff --cached --name-only)" ]; then
        git ls-files --other --exclude-standard --modified --deleted | gum choose --no-limit | xargs git add
        
        if [ -z "$(git diff --cached --name-only)" ]; then
            echo "still no staged files found, aborting..."
            return
        fi
    fi
    
    TYPE=$(echo "fix\nfeat\ndocs\nstyle\nrefactor\ntest\nchore\nrevert" | gum filter --placeholder="Select type of commit: ")
    SCOPE=$(gum input --placeholder "scope")
    
    # Since the scope is optional, wrap it in parentheses if it has a value.
    test -n "$SCOPE" && SCOPE="($SCOPE)"
    
    # Pre-populate the input with the type(scope): so that the user may change it
    SUMMARY=$(gum input --value "$TYPE$SCOPE: " --placeholder "Summary of this change")
    DESCRIPTION=$(gum write --placeholder "Details of this change (CTRL+D to finish)")
    
    # Commit these changes
    gum confirm "Commit changes?" && git commit -m "$SUMMARY" -m "$DESCRIPTION"
    
else
    echo "charmbracelet/gum is required for 'commit'"
fi