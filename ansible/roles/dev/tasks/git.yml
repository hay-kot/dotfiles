---
- name: Set Git Username
  git_config:
    name: user.name
    scope: global
    value: "{{ git_username }}"
  when: git_username is defined
  tags: git

- name: Set Git Email
  git_config:
    name: user.email
    scope: global
    value: "{{ git_email }}"
  when: git_email is defined
  tags: git

- name: Ensure Global Git Ignore File Exists
  copy:
    dest: "{{ git_global_ignore_file }}"
    content: "{{ git_global_ignore_content }}"
  tags: git

- name: Setup Global Git Ignore
  git_config:
    name: core.excludesfile
    scope: global
    value: "{{ git_global_ignore }}"
  when: git_global_ignore is defined
  tags: git

- name: Set vim as Git Editor
  git_config:
    name: core.editor
    scope: global
    value: nvim
  tags: git

- name: Set git aliases
  git_config:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    scope: global
  loop:
    - { key: "alias.aliases", value: "!git config --list | grep 'alias\\.' | sed 's/alias\\.\\([^=]*\\)=\\(.*\\)/\\1\\ \t => \\2/' | sort" }
    - { key: "alias.st",      value: "status" }
    # Delete local branches that no longer exist on the remote
    - { key: "alias.gone",    value: "!git fetch -p && git branch -vv | grep 'origin/.*: gone]' | awk '{print $1}' | xargs git branch -D" }

- name: Setup git rerere
  git_config:
    name: rerere.enabled
    scope: global
    value: true
  tags: git
